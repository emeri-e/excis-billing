# Generated by Django 5.2.6 on 2025-10-11 05:37

from django.db import migrations

from django.db import migrations

def create_currencies_from_existing_data(apps, schema_editor):
    """Create Currency objects from existing account currency values"""
    Account = apps.get_model('customers', 'Account')
    Currency = apps.get_model('customers', 'Currency')
    
    # Get all unique currency values from existing accounts
    existing_currencies = set()
    try:
        # If the field exists and is a string
        for account in Account.objects.all():
            if hasattr(account, 'currency') and account.currency:
                existing_currencies.add(account.currency)
    except Exception as e:
        print(f"Note: {e}")
    
    # Default currencies with symbols
    currency_data = {
        'USD': ('US Dollar', '$'),
        'EUR': ('Euro', '€'),
        'GBP': ('British Pound', '£'),
        'AUD': ('Australian Dollar', 'A$'),
        'INR': ('Indian Rupee', '₹'),
        'JPY': ('Japanese Yen', '¥'),
        'CAD': ('Canadian Dollar', 'C$'),
        'KES': ('Kenyan Shilling', 'KSh'),
    }
    
    # Create currencies for all existing currency codes plus defaults
    all_currencies = existing_currencies | set(currency_data.keys())
    
    for code in all_currencies:
        if code:  # Skip empty strings
            name, symbol = currency_data.get(code, (code, ''))
            Currency.objects.get_or_create(
                code=code,
                defaults={'name': name, 'symbol': symbol, 'is_active': True}
            )
            print(f"Created currency: {code}")

def reverse_func(apps, schema_editor):
    """Reverse migration - delete created currencies"""
    Currency = apps.get_model('customers', 'Currency')
    Currency.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('customers', '0004_country_currency_alter_account_region_and_more'),
    ]

    operations = [
        migrations.RunPython(create_currencies_from_existing_data, reverse_func),
    ]
